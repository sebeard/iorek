<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.stuartbeard</groupId>
    <artifactId>iorek</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Microservice for interacting with Breach Information Services in order to determine if a user has had
        their
        email appear in a breach or if a proposed password appears in a known data set of pwned passwords
    </description>

    <url>https://iorek.stuartbeard.com</url>
    <inceptionYear>2019</inceptionYear>

    <organization>
        <name>Stuart Beard</name>
        <url>https://www.stuartbeard.com</url>
    </organization>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Stuart Beard</name>
            <email>stuart@stuartbeard.com</email>
            <roles>
                <role>Project Lead</role>
                <role>Technical Architect</role>
                <role>Project Owner</role>
            </roles>
            <timezone>0</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/sebeard/iorek.git</connection>
        <developerConnection>scm:git:git@github.com:sebeard/iorek.git</developerConnection>
        <url>https://github.com/sebeard/iorek</url>
    </scm>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/sebeard/iorek/issues</url>
    </issueManagement>

    <!--distributionManagement>
        <downloadUrl></downloadUrl>
        <relocation></relocation>
        <repository>

        </repository>
        <site></site>
        <snapshotRepository>

        </snapshotRepository>
        <status></status>
    </distributionManagement-->

    <ciManagement>
        <system>Jenkins</system>
        <url>https://ci.stuartbeard.net/</url>
    </ciManagement>

    <modules>
        <module>iorek-api</module>
        <module>iorek-external-services</module>
        <module>iorek-packaging</module>
        <module>iorek-service</module>
        <module>iorek-test</module>
    </modules>

    <properties>

        <!-- Compiler Options -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

        <!-- Encoding Output -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

        <!-- Dependency Versioning -->
        <aws-lambda-events.version>2.2.6</aws-lambda-events.version>
        <aws-lambda-log4j.version>1.0.0</aws-lambda-log4j.version>
        <bytebuddy.version>1.10.3</bytebuddy.version>
        <commons-codec.version>1.10</commons-codec.version>
        <cucumber.version>5.3.0</cucumber.version>
        <feign.version>10.3.0</feign.version>
        <feign-annotation-error-decoder.version>1.2.0</feign-annotation-error-decoder.version>
        <findbugs.version>3.0.1u2</findbugs.version>
        <hamcrest.version>1.3</hamcrest.version>
        <jackson.version>2.9.9</jackson.version>
        <joda.version>2.9.9</joda.version>
        <junit.jupiter.version>5.7.0</junit.jupiter.version>
        <junit.platform.version>1.7.0</junit.platform.version>
        <log4j.version>2.8.2</log4j.version>
        <lombok.version>1.18.8</lombok.version>
        <meanbean.version>2.0.3</meanbean.version>
        <mockito.version>2.28.2</mockito.version>
        <mapstruct.version>1.4.1.Final</mapstruct.version>
        <retrofit.version>2.5.0</retrofit.version>
        <okhttp.version>4.2.2</okhttp.version>
        <skyscreamer.version>1.5.0</skyscreamer.version>
        <slf4j.version>1.7.25</slf4j.version>
        <spring.framework.version>5.3.1</spring.framework.version>
        <spring-boot.version>2.3.1.RELEASE</spring-boot.version>
        <spring-cloud.version>2.1.0.RELEASE</spring-cloud.version>
        <spring-cloud-contract.version>2.1.3.RELEASE</spring-cloud-contract.version>
        <springfox.version>2.9.2</springfox.version>
        <swagger.version>1.5.15</swagger.version>
        <wiremock.version>2.25.1</wiremock.version>

        <!-- Plugin Versioning -->
        <dockerfile-maven.version>1.3.7</dockerfile-maven.version>
        <jacoco.version>0.8.4</jacoco.version>
        <maven-compiler.version>3.8.0</maven-compiler.version>
        <maven-dependency.version>3.1.1</maven-dependency.version>
        <maven-deploy.version>3.0.0-M1</maven-deploy.version>
        <maven-failsafe.version>2.19.1</maven-failsafe.version>
        <maven-jar.version>2.3.1</maven-jar.version>
        <maven-jxr.version>2.3</maven-jxr.version>
        <maven-project-info-reports.version>3.0.0</maven-project-info-reports.version>
        <maven-release.version>2.4.2</maven-release.version>
        <maven-resources.version>2.6</maven-resources.version>
        <maven-site.version>3.7.1</maven-site.version>
        <maven-surefire.version>2.22.2</maven-surefire.version>
        <pitmp-maven.version>1.3.6</pitmp-maven.version>
        <pitest-junit5.version>0.7</pitest-junit5.version>
        <spotbugs.version>3.1.10</spotbugs.version>
        <owasp-dependency-check.version>5.3.1</owasp-dependency-check.version>
        <maven-assembler.version>3.1.1</maven-assembler.version>
        <maven-shade.version>3.2.1</maven-shade.version>
        <pitmp.version>1.3.7</pitmp.version>
        <spotbugs.version>3.1.12</spotbugs.version>
        <spotify-dockerfile.version>1.4.10</spotify-dockerfile.version>
        <spring-boot-thin-layout.version>1.0.10.RELEASE</spring-boot-thin-layout.version>
        <versions.version>2.7</versions.version>

        <!-- Sonar -->
        <maven.build.timestamp.format>MM.yyyy</maven.build.timestamp.format>
        <yearMonth>${maven.build.timestamp}</yearMonth>
        <sonar.language>java</sonar.language>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
        <jacoco.outputDir>${project.build.directory}/coverage-reports</jacoco.outputDir>
        <!-- Jacoco output file for UTs -->
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
        <!-- Jacoco output file for ITs -->
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
        <sonar.junit.reportsPath>${project.build.directory}/surefire-reports/</sonar.junit.reportsPath>
        <sonar.tests>src/test/java</sonar.tests>

        <!-- Others -->

    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-events</artifactId>
                <version>${aws-lambda-events.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-log4j</artifactId>
                <version>${aws-lambda-log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${findbugs.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <!-- Cucumber -->
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-core</artifactId>
                <version>${cucumber.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-java8</artifactId>
                <version>${cucumber.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit-platform-engine</artifactId>
                <version>${cucumber.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-spring</artifactId>
                <version>${cucumber.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-annotation-error-decoder</artifactId>
                <version>${feign-annotation-error-decoder.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-core</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-jackson</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-okhttp</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-slf4j</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${bytebuddy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-function-adapter-aws</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-function-web</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.framework.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>mockwebserver</artifactId>
                <version>${okhttp.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.juptier</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.meanbean</groupId>
                <artifactId>meanbean</artifactId>
                <version>${meanbean.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${skyscreamer.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.framework.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-wiremock</artifactId>
                <version>${spring-cloud-contract.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.7.0.1746</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <version>2.11.0</version>
                <configuration>
                    <sortOrderFile>pom-sort-config.xml</sortOrderFile>
                    <lineSeparator>\n</lineSeparator>
                    <nrOfIndentSpace>4</nrOfIndentSpace>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <keepBlankLines>true</keepBlankLines>
                    <sortDependencies>scope,groupId,artifactId</sortDependencies>
                    <sortPlugins>groupId,artifactId</sortPlugins>
                    <sortModules>true</sortModules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>sort</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-Xlint</arg>
                        <arg>-Xlint:-try</arg>
                        <arg>-Xlint:-processing</arg>
                        <!--arg>-Werror</arg-->
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-dependency-analyzer</artifactId>
                        <version>1.11.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                            <ignoredDependencies>
                                <ignoredDependency>org.projectlombok:lombok</ignoredDependency>
                            </ignoredDependencies>
                            <ignoreNonCompile>true</ignoreNonCompile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <argLine>${surefire.argLine} -Xmx1024m -Xms1024m
                        -Djdk.net.URLClassPath.disableClassPathURLCheck=true
                    </argLine>
                    <failIfNoTests>false</failIfNoTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>META-INF/**</exclude>
                    </excludes>
                </configuration>
                <executions>

                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-unit-test.exec</destFile>
                            <propertyName>surefire.argLine</propertyName>
                        </configuration>
                    </execution>

                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-unit-test.exec</dataFile>
                            <outputDirectory>${project.build.directory}/coverage-reports/unit-test</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${owasp-dependency-check.version}</version>
                <inherited>false</inherited>
                <configuration>
                    <cveValidForHours>4</cveValidForHours>
                    <autoUpdate>true</autoUpdate>
                    <format>ALL</format>
                    <skipTestScope>true</skipTestScope>
                    <suppressionFile>suppressions.xml</suppressionFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
