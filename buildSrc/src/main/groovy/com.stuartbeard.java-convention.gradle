plugins {
    id 'project-report'
    id 'com.stuartbeard.license-convention'
    id 'com.stuartbeard.dependency-updates'
    id 'com.stuartbeard.mutation-test-convention'
    id 'com.github.hierynomus.license'
    id 'com.github.spotbugs'
}

group "com.stuartbeard.iorek"

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    commonPlatform
    compileOnly.extendsFrom(commonPlatform)
    annotationProcessor.extendsFrom(commonPlatform)
    implementation.extendsFrom(commonPlatform)
    api.extendsFrom(commonPlatform)
    testCompileOnly.extendsFrom(commonPlatform)
    testAnnotationProcessor.extendsFrom(commonPlatform)
    testRuntimeOnly.extendsFrom(commonPlatform)
    testImplementation.extendsFrom(commonPlatform)
    testFixturesCompileOnly.extendsFrom(commonPlatform)
    testFixturesAnnotationProcessor.extendsFrom(commonPlatform)
    testFixturesImplementation.extendsFrom(commonPlatform)
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: "${slf4jVersion}"

    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"

    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: "${spotbugsAnnotationsVersion}"
    testCompileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: "${spotbugsAnnotationsVersion}"

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitJupiterVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: "${junitJupiterVersion}"
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitJupiterVersion}"
    testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: "${equalsVerifierVersion}"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "${assertJVersion}"
    testImplementation group: 'org.force66', name: 'BeanTester', version: "${beanTesterVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "${mockitoVersion}"
}

compileJava {
    options.compilerArgs << "-Werror"
    options.compilerArgs << "-Xlint:all"
    options.compilerArgs << "-Xlint:-try"
    options.compilerArgs << "-Xlint:-processing"
}

test {
    useJUnitPlatform()
}


// TODO: Move to own convention?
spotbugsMain {
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotbugsTest {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.build.dependsOn dependencyUpdates
configurations.implementation.setCanBeResolved(true)
configurations.testImplementation.setCanBeResolved(true)
